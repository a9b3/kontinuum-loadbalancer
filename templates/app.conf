<% var endpoints = _.get(tree.nodes,`['/registry'].nodes['/registry/services'].nodes['/registry/services/endpoints'].nodes['/registry/services/endpoints/default'].nodes`) %>
<% var specs = _.get(tree.nodes, `['/registry'].nodes['/registry/services'].nodes['/registry/services/specs'].nodes['/registry/services/specs/default'].nodes`) %>
<% var minions = _.get(tree.nodes, `['/registry'].nodes['/registry/minions'].nodes`) %>

<% if (endpoints && specs && minions) { %>

<% Object.keys(endpoints).map(key => { %>
<% var endpointKey = path.basename(key) %>

<% var specValue = JSON.parse(specs[`/registry/services/specs/default/${endpointKey}`].value) %>

<% var nodePort = _.get(specValue, `spec.ports[0].nodePort`) %>
<% if (nodePort) { %>
<% var subdomain = _.get(specValue, `metadata.labels.subdomain`) %>

upstream <%- endpointKey %> {
  least_conn;
  <% Object.keys(minions).map(ip => { %>
  server <%- ip %>:<%- nodePort %>;
  <% }) %>
}

server {
  listen 80;

  <% if (subdomain === 'index') { %>
  server_name www.<%- domain %> <%- domain %>;
  <% } else { %>
  server_name <%- subdomain %>.<%- domain %>;
  <% } %>

  location / {
    proxy_pass http://<%- endpointKey %>;
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded_For $proxy_add_x_forwarded_for;
  }
}

<% } %>
<% }) %>
<% } %>
